{"version":3,"sources":["components/HomeScreen.jsx","components/AllBeers.jsx","components/SingleBeer.jsx","components/NewBeer.jsx","App.js","registerServiceWorker.js","index.js"],"names":["HomeScreen","className","src","alt","to","Component","AllBeers","props","getAllBeer","axios","get","then","theResult","x","data","setState","beers","page","pageNum","ready","catch","err","console","log","displayBeers","state","map","eachBeer","_id","key","image_url","name","tagline","this","type","SingleBeer","beer","getTheBeer","theBeer","match","params","id","style","color","textAlign","otherStyle","displayBeer","attenuation_level","first_brewed","description","contributed_by","NewBeer","firstBrewed","brewersTips","attenuationLevel","contributedBy","addNewBeer","e","a","preventDefault","post","brewers_tips","history","push","updateField","target","value","onSubmit","onChange","rows","App","exact","path","render","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e7af898b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n// import NewBeer from './components/NewBeer';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class HomeScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid home-screen\">\r\n                <h1 className=\"page-title\">Ironbeers</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-6 beer-pic\">\r\n                        <img src=\"../images/beers.png\" alt=\"all beers\"/>\r\n                        <div>\r\n                        <Link to = {\"/beers\"}>\r\n                            <button className=\"btn btn-secondary btn-sm\">All beer</button>\r\n                        </Link>\r\n                        <p>Check out our fine selection of beers. We have a beer for everyone!</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-6 beer-pic\">\r\n                        <img src=\"../images/random-beer.png\" alt=\"random beers\"/>\r\n                        <div>\r\n                        <Link to = {\"/beers/random\"}>\r\n                            <button className=\"btn btn-secondary btn-sm\">Random beer</button>\r\n                        </Link>\r\n                        <p>Feeling lucky? Check out a random beer from our selection!</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-0 col-lg-3\"></div>\r\n                    <div className=\"col-12 col-lg-6 beer-pic\">\r\n                        <img src=\"../images/new-beer.png\" alt=\"new beers\"/>\r\n                        <div>\r\n                        <Link to = {\"/newbeer\"}>\r\n                        <button className=\"btn btn-secondary btn-sm\">New beer</button>\r\n                        </Link>\r\n                    <p>Create a beer of your own for others to try!</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AllBeers extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            beers: null,\r\n            ready: false,\r\n            page: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllBeer();\r\n    }\r\n\r\n    getAllBeer = () => {\r\n        // This code uses the original punkAPI, allowing for browsing of a larger beer selection displaying 24 per page.\r\n        // The punkAPI doesn't allow for post, so I had to comment it out in order to implement the newBeer route\r\n\r\n        // console.log(this.state.page)\r\n        let page;\r\n        let pageNum;\r\n        // if(!this.state.page){\r\n        //     pageNum = 1\r\n        // }else {\r\n        //     pageNum = this.state.page\r\n        // }\r\n        // page = `https://api.punkapi.com/v2/beers?page=${pageNum}&per_page=24`;   \r\n        page=\"https://ih-beers-api2.herokuapp.com/beers\";\r\n        axios.get(page)\r\n        .then((theResult)=>{     \r\n        let x = theResult.data;\r\n        this.setState({beers: x, page: pageNum, ready: true})\r\n        })\r\n        .catch((err)=>{\r\n        console.log(err);\r\n        })\r\n    }\r\n\r\n    //PunkAPI page switching buttons\r\n    // pageSwitch = (direction) =>{\r\n    //     this.setState({\r\n    //         page: this.state.page + direction,\r\n    //     }, () => {\r\n    //         this.getAllBeer();\r\n    //     })\r\n    // }\r\n\r\n    displayBeers = () => {\r\n        return this.state.beers.map((eachBeer) => {\r\n            console.log(eachBeer._id)\r\n            return (\r\n            <Fragment>\r\n                <div className=\"card col-10 offset-1 col-md-4 offset-md-1 mt-5 one-beer\" key={eachBeer._id}>\r\n                    <img src={eachBeer.image_url} className=\"card-img-top mx-auto\" alt={\"Picture of \" + eachBeer.name} />\r\n                    <div className=\"card-body\">\r\n                        <h5>{eachBeer.name}</h5>\r\n                        <h6>{eachBeer.tagline}</h6>\r\n                        <Link to = {`/beers/${eachBeer._id}`}>\r\n                                <button className=\"btn btn-danger btn-sm\">Check it out!</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-0 col-md-1\"></div>\r\n            </Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.ready) {\r\n            console.log(this.state.beers);\r\n            return (\r\n                <div>\r\n                <div className=\"container-fluid all-the-beers\">\r\n                <Link to = {'/'}>\r\n                    <button className=\"btn btn-secondary mt-4\" type=\"button\">Home</button>\r\n                </Link>\r\n                <h1 className=\"page-title\">Ironbeers</h1>\r\n                    <div className=\"row\">\r\n                        {this.displayBeers()}\r\n                    </div>\r\n                    {/*\r\n                    buttons to go to the next or previous page when browsing the punkAPI selection of beers\r\n                    */}\r\n                    {/* <div className=\"row\">\r\n                        { this.state.page > 1 &&\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={() => {this.pageSwitch(-1)}}>Previous page</button>\r\n                        }\r\n                            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => {this.pageSwitch(1)}}>Next page</button>\r\n                    </div> */}\r\n                </div>   \r\n                </div>  \r\n            )\r\n        } else{\r\n            return(\r\n                <div className=\"container-fluid all-the-beers\">\r\n                    <h1 className=\"page-title\"> Pouring...</h1>\r\n                </div>\r\n            )\r\n        }\r\n              \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class SingleBeer extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        ready: false,\r\n        beer: null,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTheBeer();\r\n    }\r\n\r\n    getTheBeer = () => {\r\n        let theBeer;\r\n\r\n        // Code to pull from the punkAPI\r\n        // if (this.props.beer){\r\n        //     theBeer = `https://api.punkapi.com/v2/beers/${this.props.beer}`;  \r\n        // } else {\r\n        //     console.log(this.props.match.params.id);\r\n        //     theBeer = `https://api.punkapi.com/v2/beers/${this.props.match.params.id}`;\r\n        // }\r\n        if (this.props.beer){\r\n            theBeer = 'https://ih-beers-api2.herokuapp.com/beers/random';\r\n        } else {\r\n            theBeer = `https://ih-beers-api2.herokuapp.com/beers/${this.props.match.params.id}`;\r\n        }\r\n        axios.get(theBeer)\r\n        .then((theResult)=>{\r\n        let x = theResult.data;     \r\n        console.log(x);\r\n        this.setState({beer: x, ready: true})\r\n        })\r\n        .catch((err)=>{\r\n        console.log(err);\r\n        })\r\n    }\r\n\r\n    style = {\r\n        color: 'gray',\r\n        textAlign: 'left',\r\n    }\r\n\r\n    otherStyle = {\r\n        textAlign: 'left',\r\n    }\r\n    displayBeer = () => {\r\n        return (\r\n        <div className=\"container-fluid one-beer\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-lg-5 beer-image\">\r\n                    <img src={this.state.beer.image_url}  alt={\"Picture of \" + this.state.beer.name} />\r\n                </div>\r\n                <div className=\"col-12 col-lg-7\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-10\">\r\n                            <h4 className=\"float-left\" style={this.otherStyle}>{this.state.beer.name}</h4>\r\n                            <h5 className=\"float-right\" style={this.style}>{this.state.beer.attenuation_level}</h5>  \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-10\">\r\n                            <h6 className=\"float-left\" style={this.style}>{this.state.beer.tagline}</h6>\r\n                            <h6 className=\"float-right\" style={this.otherStyle}>{this.state.beer.first_brewed}</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-10\">\r\n                            <p>{this.state.beer.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <h6 style={this.style}>{this.state.beer.contributed_by}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.ready){\r\n            return (\r\n                <div className=\"all-the-beers\">\r\n                    <Link to = {'/'}>\r\n                        <button className=\"btn btn-secondary mt-4\" type=\"button\">Home</button>\r\n                    </Link>\r\n                    <h1 className=\"page-title\">Ironbeers</h1>\r\n                    {this.displayBeer()}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <h1 className=\"page-title\">Pouring...</h1>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class NewBeer extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        tagline: \"\",\r\n        description: \"\",\r\n        firstBrewed: \"\",\r\n        brewersTips: \"\",\r\n        attenuationLevel: 0,\r\n        contributedBy: \"\",\r\n    }\r\n    addNewBeer = async (e) => {\r\n        e.preventDefault()\r\n        let url = 'https://ih-beers-api2.herokuapp.com/beers/new';\r\n        let newBeer = await axios.post(url, {\r\n            name: this.state.name,\r\n            tagline: this.state.tagline,\r\n            description: this.state.description,\r\n            first_brewed: this.state.firstBrewed,\r\n            brewers_tips: this.state.brewersTips,\r\n            attenuation_level: this.state.attenuationLevel,\r\n            contributed_by: this.state.contributedBy\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        });\r\n        this.props.history.push('/beers');\r\n    }\r\n\r\n    updateField = (e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"new-beer-form\">\r\n            <Link to = {'/'}>\r\n                <button className=\"btn btn-secondary mt-4\" type=\"button\">Home</button>\r\n            </Link>\r\n            <h1 className=\"page-title\">Ironbeers</h1>\r\n            <div className=\"container-fluid\">\r\n                <h3 className=\"page-title2\">New Beer</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 offset-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n                        <form onSubmit={this.addNewBeer} id=\"newBeerForm\" className=\"pb-4\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\" >Name</div>\r\n                                <input onChange={this.updateField} type=\"text\" className=\"form-control\" value={this.state.name} name=\"name\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">Tagline</div>\r\n                                <input onChange={this.updateField} type=\"text\" className=\"form-control\" value={this.state.tagline} name=\"tagline\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">Description</div>\r\n                                <textarea onChange={this.updateField} className=\"form-control\" value={this.state.description} name=\"description\" rows=\"3\"></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">First Brewed</div>\r\n                                <input onChange={this.updateField} type=\"text\" className=\"form-control\" value={this.state.firstBrewed} name=\"firstBrewed\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">Brewer's Tips</div>\r\n                                <input onChange={this.updateField} type=\"text\" className=\"form-control\" value={this.state.brewersTips} name=\"brewersTips\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">Attenuation Level</div>\r\n                                <input onChange={this.updateField} type=\"number\" className=\"form-control\" value={this.state.attenuationLevel} name=\"attenuationLevel\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"page-title3\">Contributed By</div>\r\n                                <input onChange={this.updateField} type=\"text\" className=\"form-control\" value={this.state.contributedBy} name=\"contributedBy\"/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-danger\">Add beer!</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomeScreen from './components/HomeScreen';\nimport {Switch, Route} from 'react-router-dom';\nimport AllBeers from './components/AllBeers';\nimport SingleBeer from './components/SingleBeer';\nimport NewBeer from './components/NewBeer';\n\nclass App extends Component {\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Switch>\n            <Route exact path=\"/\" render = {()=>\n            <HomeScreen/>}/>\n            <Route exact path=\"/beers\" render = {(props)=>\n            <AllBeers\n              {...props}\n            />}/>\n            <Route exact path=\"/beers/random\" render = {() => \n            <SingleBeer\n              beer={true}\n              />}/>\n            <Route exact path=\"/beers/:id\" render = {(props) => \n            <SingleBeer\n            {...props}\n            />}/>\n            <Route exact path=\"/newbeer\" render = {(props) => \n            <NewBeer\n              {...props}\n            />}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n\n<BrowserRouter>\n<App />\n</BrowserRouter>\n\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}